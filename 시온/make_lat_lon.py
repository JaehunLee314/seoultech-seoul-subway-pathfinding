# -*- coding: utf-8 -*-
import pandas as pd
from geopy.geocoders import Nominatim
from geopy.extra.rate_limiter import RateLimiter

# failed_pairs: List[Tuple[str, str]]  (이미 analyse_1000_random_astar에서 받아온 것)
failed_pairs = [
    ("성수", "상록수"), ("평촌", "경마공원"), ("보산", "잠원"), 
    # … (중략) …
    ("동대문역사문화공원", "올림픽공원"), ("홍대입구", "별내별가람역"),
    ("정부과천청사", "아산"), ("동작", "역곡"), ("동인천", "동작"),
    ("교대", "낙성대"), ("성북", "잠실"), ("잠실", "원당"),
    ("성북", "별내별가람역"), ("하남시청", "대야미"), ("대림", "소사"),
    ("진접광릉숲", "행당"), ("보산", "옥수"), ("구의", "간석"),
    ("방학", "숙대입구"), ("서울대입구", "송정"), ("신이문", "대화"),
    ("간석", "청량리"), ("도봉", "영등포시장"), ("관악", "인덕원"),
    ("원흥", "송정"), ("대야미", "외대앞"), ("인덕원", "대곡"),
    ("상계", "인덕원"), ("올림픽공원", "합정"), ("신길온천", "쌍용"),
    ("봉명", "신창"), ("하남검단산", "대야미"), ("미아사거리", "안산"),
    ("산본", "당산"), ("매봉", "천호"), ("잠실", "시청"),
    ("성수", "구의"), ("길동", "신길온천"), ("종각", "정발산"),
    ("평택", "오남역"), ("신사", "중앙"), ("군자", "장한평"),
    ("당산", "아차산"), ("남영", "평촌"), ("마포", "과천"),
    ("세마", "오목교"), ("용두", "쌍용"), ("굽은다리", "신정"),
    ("동두천중앙", "신창"), ("안양", "신길온천"), ("오산대", "도봉"),
    ("남영", "신길온천"), ("영등포", "신정"), ("풍양역", "양천구청"),
    ("신길온천", "명일"), ("범계", "아산"), ("진위", "미아"),
    ("광나루", "용산"), ("화곡", "삼성"), ("신길온천", "주안"),
    ("충정로", "혜화"), ("남부터미터널", "둔촌동"), ("성북", "장한평"),
    ("하남시청", "동두천"), ("인덕원", "노원"), ("안산", "경마공원"),
    ("원당", "구로디지털단지"), ("옥수", "충정로"), ("연신내", "산본"),
    ("경복궁", "신림"), ("주엽", "독산"), ("별내별가람역", "동두천중앙"),
    ("대림", "송내"), ("삼각지", "숙대입구"), ("덕계", "광화문"),
    ("삼성", "월계"), ("대림", "초지"), ("하남풍산", "삼송"),
    ("압구정", "삼송"), ("원흥", "무악재"), ("행당", "회현"),
    ("광나루", "오목교"), ("삼송", "당정"), ("신창", "도원"),
    ("광나루", "압구정"), ("쌍용", "망월사"), ("고잔", "수리산"),
    ("방이", "광나루"), ("신대방", "신길온천"), ("회현", "중동"),
    ("서동탄", "고잔"), ("약수", "광화문"), ("신정네거리", "성북"),
    ("인덕원", "온양온천"), ("쌍용", "무악재"), ("청량리", "여의도"),
    ("한대앞", "선릉"), ("남부터미터널", "을지로입구"), ("명일", "수리산"),
    ("마두", "잠실나루"), ("이촌", "성수"), ("하남시청", "두정"),
    ("산본", "여의나루"), ("양천구청", "오남역"), ("대야미", "경마공원"),
    ("무악재", "초지"), ("한대앞", "오목교"), ("범계", "소요산"),
    ("길동", "정발산"), ("안국", "굽은다리"), ("수유", "동작"),
    ("풍양역", "봉천"), ("천호", "경마공원"), ("종합운동장", "도봉"),
    ("남태령", "굽은다리"), ("신길온천", "온수"), ("용산", "용두"),
    ("도봉", "이수"), ("충정로", "구의"), ("덕정", "한대앞"),
    ("안국", "한대앞"), ("서대문", "반월"), ("녹번", "충정로"),
    ("관악", "경복궁"), ("석수", "백석"), ("원흥", "경찰병원"),
    ("청량리", "송정"), ("숙대입구", "직산"), ("상록수", "외대앞"),
    ("수원", "정부과천청사"), ("동작", "일원"), ("도봉", "역곡"),
    ("하남풍산", "대곡"), ("신림", "삼송"), ("녹천", "교대"),
    ("송정", "오남역"), ("두정", "초지"), ("초지", "신길"),
    ("청량리", "거여"), ("노원", "오이도"), ("평촌", "제기동"),
    ("삼송", "별내별가람역"), ("압구정", "광화문"), ("교대", "세마"),
    ("강남", "대공원"), ("광명", "올림픽공원"), ("평촌", "장한평"),
    ("오이도", "연신내"), ("쌍용", "여의나루"), ("풍양역", "올림픽공원"),
    ("충무로", "과천"), ("독립문", "신창"), ("중동", "한대앞"),
    ("정왕", "동두천중앙"), ("뚝섬", "오이도"), ("수유", "쌍문"),
    ("평택", "풍양역"), ("수유", "중앙"), ("신정네거리", "대림"),
    ("원흥", "신길"), ("경마공원", "중동"), ("대림", "미사"),
    ("충무로", "주엽"), ("군자", "독립문"), ("한대앞", "배방"),
    ("신용산", "지제"), ("아차산", "애오개"), ("미아", "상왕십리"),
    ("지축", "안산"), ("덕계", "회현"), ("안국", "잠실"),
    ("범계", "방이"), ("화정", "성균관대"), ("성북", "독립문"),
    ("대공원", "삼성"), ("상계", "교대"), ("신정네거리", "주엽"),
    ("가산디지털단지", "동작"), ("용답", "중앙"), ("지제", "방배"),
    ("망월사", "원흥"), ("매봉", "고잔"), ("수원", "대곡"),
    ("정부과천청사", "회현"), ("합정", "천호"), ("도원", "평촌"),
    ("종합운동장", "성북"), ("미아", "대방"), ("미아", "망월사"),
    ("남태령", "올림픽공원")
]

# 중복 제거해서 단일 리스트로 만들기
stations = sorted(set([s for s, g in failed_pairs] + [g for s, g in failed_pairs]))

# 이제 geocoding용 stations 리스트로 사용하세요.

# 1) 지오코더 초기화
geolocator = Nominatim(user_agent="subway_geocoder")
geocode = RateLimiter(geolocator.geocode, min_delay_seconds=1)

# 2) 조회 및 저장
records = []
for name in stations:
    query = f"{name}역, 서울, 대한민국"
    loc = geocode(query)
    if loc:
        records.append({
            "station": name,
            "latitude": loc.latitude,
            "longitude": loc.longitude
        })
    else:
        records.append({
            "station": name,
            "latitude": None,
            "longitude": None
        })

# 3) DataFrame 생성 및 CSV 저장
df = pd.DataFrame(records)
df.to_csv("missing_stationstemp_coords.csv", index=False, encoding="utf-8-sig")

print("✅ missing_stationstemp_coords.csv 생성 완료")
